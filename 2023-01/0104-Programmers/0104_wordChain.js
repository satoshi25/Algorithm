// 1부터 n까지 번호가 붙어 있는 n명의 사람이 영어 끝말잇기를 한다.
// 규칙은 다음과 같다.
// 1. 1번부터 번호 순서대로 한 사람씩 차례대로 단어를 말한다.
// 2. 마지막 사람이 단어를 말한 다음에는 다시 1번부터 시작한다.
// 3. 앞 사람이 말한 단어의 마지막 문자로 시작하는 단어를 말해야 한다.
// 4. 이전에 등장했던 단어는 사용할 수 없다.
// 5. 한 글자인 단어는 인정하지 않는다.

// 사람의 수 n과 사람들이 순서대로 말한 단어 words가 매개변수로 주어질 때,
// 가장 먼저 탈락하는 사람의 번호와 그 사람이 자신의 몇 번째 차례에 탈락하는지
// [번호, 차례] 형태로 반환하는 함수를 완성하시오.


function solution(n, words) {
	var answer = [];
	let arr = words.slice(); 
	let arr1 = [];
	let mistake = 0
	for (let i = 0; i < arr.length; i++) {
			if (arr1.indexOf(arr[i]) !== -1) {
					mistake = i+1;
					break;
			} else if (i !== 0 && arr[i][0] !== arr[i-1][arr[i-1].length-1]) {
					mistake = i+1;
					break;
			}
			arr1.push(arr[i]);
	}
	if (mistake === 0) {
			answer = [0,0];
	} else {
			answer.push(mistake % n || n);
			answer.push(Math.ceil(mistake / n));
	}
	return answer;
}

// n은 끝말잇기를 하는 사람의 수
// words는 끝말잇기 할 단어 - 순서대로 단어를 사용.
// [번호, 차례] 로 반환.
	// 번호는 몇번째 사람인지다.
	// 차례는 해당 번호 사람이 몇번째 말하면서 틀렸는지다.

// 탈락의 경우
	// 끝말잇기 단어가 아닌 경우 탈락
			// 앞단어의 마지막 알파벳과 뒷단어의 처음 알파벳이 같아야 한다.
			// words를 arr에 slice로 복사
			// arr의 반복문에서 arr[i]의 첫 알파벳과 arr[i-1]의 마지막 알파벳이 같은지 비교
	// 사용했던 단어가 다시 나오면 탈락
			// words를 arr에 slice로 복사
			// arr1은 빈배열로 같은 단어가 있는지 판단하고 없으면 push
	
	// 탈락하면 mistake에 i+1을 넣는다.
	// 세번째 사람이 9번째에 틀렸다고 한다면 [3,3]이 반환된다.
	// 차례에는 mistake를 n으로 나눈 수를 올림하여 반환한다.
	// 번호에는 나머지를 반환하는데 0이라면 n을 반환한다.


// 탈락이 아닌 경우
// 단어를 다 사용한 경우는 탈락 아님
// 탈락이 없기 때문에 [0,0]을 반환한다.